function results = batchnormal(im)
%Image Processing Function
%
% IM      - Input image.
% RESULTS - A scalar structure with the processing results.
%

%--------------------------------------------------------------------------
% Auto-generated by imageBatchProcessor App. 
%
% When used by the App, this function will be called for every input image
% file automatically. IM contains the input image as a matrix. RESULTS is a
% scalar structure containing the results of this processing function.
%
%--------------------------------------------------------------------------



% Replace the sample below with your code----------------------------------
%% Reference image
% fullimagepath = {fullimagepath.name}';   
% refimg = strcat(folder,fullimagepath{7});
    
% target = imread(refimg);
% target = rgb2lab(target);
% inDir = '/media/dolu/Mosadoluwa/Documents/Projects/Medical Image Processing Project/Projects/Data/dataset1/Module1.2_FeatureExtractionSelection_Data';
norms = load('dynamic_range2.mat');
ltarmean = mean([norms.result.redChannel_Mean]);
atarmean = mean([norms.result.greenChannel_Mean]);
btarmean = mean([norms.result.blueChannel_Mean]);

ltarstd = mean([norms.result.redChannel_std]);
atarstd = mean([norms.result.greenChannel_std]);
btarstd = mean([norms.result.blueChannel_std]);

% ltarmean = mean2(target(:,:,1));
% atarmean = mean2(target(:,:,2));
% btarmean = mean2(target(:,:,3));
% ltarstd = std2(target(:,:,1));
% atarstd = std2(target(:,:,2));
% btarstd = std2(target(:,:,3));
%%
image = rgb2lab(im);
lorigmean = mean2(image(:,:,1));
aorigmean = mean2(image(:,:,2));
borigmean = mean2(image(:,:,3));
lorigstd = std2(image(:,:,1));
aorigstd = std2(image(:,:,2));
borigstd = std2(image(:,:,3));
lnew = (((image(:,:,1) - lorigmean)/lorigstd)*ltarstd)+ltarmean;
anew = (((image(:,:,2) - aorigmean)/aorigstd)*atarstd)+atarmean;
bnew = (((image(:,:,3) - borigmean)/borigstd)*btarstd)+btarmean;
img(:,:,1) = lnew;
img(:,:,2) = anew;
img(:,:,3) = bnew;
normimg = lab2rgb(img);

results.img = normimg;

%--------------------------------------------------------------------------
